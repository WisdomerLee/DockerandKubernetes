AWS EC2 : 원격 기기를 관리하고 제어하는것을 가능하게 하는 서비스

EC2를 생성하고 실행, VPC, 보안 그룹
보안 설정 그룹을 www에 port를 노출시켜야 함
SSH 에 연결하여 docker를 설치하고 container를 실행하는 방법을 찾음

커맨드 창에 예시 : EC2예시를 실행하려면
docker run -d --rm --name node-dep node

aws의 ec2의 가상 머신(원격) 의 inbound와 outbound의 설정을 보안 설정에서 확인
outbound는 외부로 반응을 보내는 것, inbound는 해당 기기로의 메시지를 허용하는 것
key 파일이 중요 : inbound로 허용되는 것은 해당 key파일이 있을 때만 가능하도록...

inbound rule에 http  type 접속을 허용함...

그리고 소스코드가 변경되어 이미지를 다시 빌드하게 되면....
배포한 다른 docker에서도 해당 업데이트를 반영하도록 해야 함
개발 PC의 docker에서 이미지를 build하고
docker hub에 이미지를 push

실행할 곳에서 단순히 docker run으로 실행하면 로컬에 이미지가 있으면 자동으로 가져오진 않으므로...

docker pull로 이미지를 가져와서 다시 실행할 것!

하지만 이런 접근 방식은 단점이 있음...

원격 기기에 대한 완전한 소유권이 있어야 함 : 보안 문제....
필요한 소프트웨어 업데이트를 실행하고, 네트워크, 보안 그룹, 방화벽 설정을 하여야 함
SSH로 머신을 관리하는 것이 매우 번거로움

배포 때의 주의사항: 
bind mount는 배포과정에서 사라져야 함
container화된 프로그램은 build step이 필요할 수 있음
multi-container프로젝트는 여러 기기들로 쪼개질 수 있음
control과 책임 중 어느쪽에 비중을 둘 지 생각해두어야 함

자체 원격 기기를 갖고 있다면 생성, 관리, 업데이트 관리, 감시, 기능 확대 등의 역할을 모두 처리하여야 함
:숙련된 클라우드 전문가라면 아주 좋음

다른 곳에서 자동으로 관리하는 서비스를 이용한다면(AWS의 ECS, microsoft azure, google의 cloud)

AWS ECS 서비스를 이용하는 방식...을 기준으로 예시를 살펴봄

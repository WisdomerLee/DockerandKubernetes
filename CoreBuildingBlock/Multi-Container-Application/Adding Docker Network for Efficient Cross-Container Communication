컨테이너끼리 network를 하는데 있어 매번 port를 노출시켜 container끼리 통신하게 하는 방법은 좋지 않다

그러므로 docker network를 설정하여 container끼리 이름으로 서로의 container에 접속할 수 있도록 바꾸어야 함

docker network ls
위의 커맨드로 docker의 network를 확인하고

docker network create goals-net
위의 커맨드를 실행하면 goals-net이라는 도커 네트워크가 만들어짐

docker run --name mongodb --rm -d --network goals-net mongo
위와 같이 실행하면 container의 mongo db에 기기는 접속이 불가능하게 됨 > 물론 우리는 다른 container에서 mongodb에 접속할 것이므로..

백엔드의 파일을 수정하여 이미지를 다시 빌드하여야 함 : 왜냐하면 접속경로가 docker 내부 네트워크로 바뀌기 때문 : backend의 docker file 참고
docker run --name goals-backend --rm -d --network goals-net -p 80:80 goals-node

backend의 프로그램은 port를 노출시켜야 함 >> frontend 쪽의 프로그램이 실행될 때 browser를 통해 접근하기 때문..

docker run --name goals-frontend --rm -d -p 3000:3000 -it --network goals-net goals-node
로 실행함

프론트 엔드는 설정이 바뀌는 것이 없음 : 이유는 실행이 docker에서 일어나는 게 아니라 컴퓨터의 browser를 통해 실행되기 때문

MongoDB container의 설정과 관련하여 권한 문제가 발생할 수 있음
: 이후의 내용에서 다루게 됨

code같은 경우 공유할 때 docker file을 공유할 수도 있고(소스코드 포함)
Docker로 build한 Image를 공유할 수도 있고 Container를 공유할 수도 있음

docker images로 이미지들을 확인하고

docker hub의 계정을 하나 만들어서..

repository를 생성할 때 Protip에 docker command가 보임..
repository를 생성하고 나면 
general에 Docker commands가 보이는데

docker push "이미지를 공유할 도커 허브 폴더" 의 커맨드가 보임
태그를 붙이지 않고도 공유할 수 있음

그런데 로컬 docker에서 해당 커맨드를 그대로 붙여넣고 실행하면
로컬에 해당 허브, 혹은 태그가 붙은 이미지가 없다고 에러를 띄움

build 할 image의 이름 자체를 "이미지를 공유할 도커 허브 폴더"로 지정하여 다시 해당 커맨드를 실행시켜야 함

그러려면 해당 image를 다시 해당 태그를 붙여 build하거나
docker build -t "공유할 도커 허브 폴더" .

하지만 이미 생성된 image가 있다면?
docker tag "변경해야 할 이미지 이름(:태그)" "새 이미지 이름(:태그)"

해당 커맨드를 실행하면 원본 image와 복사된 image가 있음

위와 같이 image의 이름을 수정하고 다시 push를 시도하면
docker 계정에서 거부당했다고 에러 메시지가 뜸...

해당 에러를 극복하려면...
아래와 같이 docker login 커맨드 옵션을 한 번 실행하면 됨 > 매번 실행할 필요 없음... 자동으로 저장되어 login으로 인식되어 docker hub에 로그인을 하여 push를 처리하게 됨

docker login
위의 커맨드를 실행하면 사용자 이름과 비밀번호를 요구하게 되는데 이에 맞는 사용자 이름과 비밀번호를 입력하면 됨
각각 맞게 입력하면 login successed라는 로그가 보임

그리고 docker logout 커맨드도 있음
docker logout
위의 커맨드를 실행하면 로그인이 바로 해지됨

로그인하고 나서 다시 push 커맨드를 실행하면....?

repository로 공유가 됨

자세히 살펴보면 모든 것이 다 push되지 않고
FROM으로 처리된 부분이 이미 docker hub에 있으면 해당 내용은 docker hub로 모두 전송되지 않음, 이미지의 연결만 처리하고 추가 코드, 추가 정보만 push함

다시 repository로 들어가서 보게 되면
push한 image를 확인할 수 있는데 만약 tag를 따로 지정하지 않으면 latest로 자동으로 붙게 됨

그럼 공유한 이미지를 다운 받을 땐...

docker pull "이미지가 공유된 도커 허브"
만약 도커에서 public으로 된 image라면 docker login 없이도 다운이 가능함

docker에서 최신 image를 실행하려면
docker pull을 이용하여 최신 이미지를 받고 다시 실행하여야 함

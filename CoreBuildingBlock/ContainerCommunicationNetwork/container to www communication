어플리케이션 등이 있고 > API와 통신하려면 ...
데이터를 주고 받으려면
http요청을 외부로 보내게 됨

호스팅 컴퓨터에 요청을 보내 데이터를 주고 받을 수 있음
docker 도움 없이 데이터를 주고 받을 수 있게 하려면...?
컴퓨터에 요청을 보냄..

또다른 container가 있으면...? 해당 container와 데이터를 주고 받을 수 있으려면
여러 container로 된 어플리케이션은 매우 흔한 편

container를 여럿 돌리는 프로그램을 만들 때 container는 하나의 기능에 집중하게 만드는 게 좋음 : 모듈단위로 container 분할

mongo db관련 image는 docker hub에서 구할 수 있음

docker run mongo로 실행하면 mongodb가 실행됨 (이미지를 따로 굳이 만들 필요 없음)
docker run -d --name mongodb mongo로 실행

docker container inspect "확인할 컨테이너 이름"

docker로 container끼리 통신을 하게 만들 수 있음 : network
docker run --network "네트워크 이름"
의 커맨드로 실행시켜 container를 같은 네트워크상에 둘 수 있음
이렇게 실행하면 container가 각각의 container의 ip를 찾아서 확인하여 코드에 넣을 필요 없이 container끼리 자동으로 각각의 container를 찾아 커뮤니케이션을 하게 됨

docker run -d --name mongodb --network favorites mongo
위의 커맨드로 실행하면 해당 이름을 가진 네트워크를 찾을 수 없다는 에러를 띄움
네트워크를 구성하려면
docker에서 container끼리 통신하게 할 network를 직접 만들어 주어야 함

docker network create favorites
해당 커맨드를 먼저 실행시키고

docker network ls로 목록을 확인하여 만든 network가 있는지 확인하기
그리고 다시
docker run -d --name mongodb --network favorites mongo
로 실행하면 정상 동작함
몽고 DB도 다른 컨테이너와 상호작용을 해야하는데 여기엔 포트가 노출되지 않음 여기에 연결되는 container는 docker network를 쓰기 때문

그리고 예시의 프로그램을 ...
이미지를 빌드하고
docker run --name favorites --network favorites -d --rm -p 3000:3000 favorite-node
로 실행 : 같은 네트워크 이름으로 실행해야 하는 것을 잊지 말 것

컨테이너끼리의 network를 구성하는 경우에는 포트를 노출할 필요가 없음...
